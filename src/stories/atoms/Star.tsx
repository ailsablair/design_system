import React from 'react';
import './star.css';

export interface StarProps {
  /** Fill percentage of the star */
  fill?: 'empty' | '5%' | '15%' | '25%' | '40%' | '50%' | '60%' | '75%' | '85%' | '95%' | '100%';
  /** Size variant */
  size?: 'small' | 'default' | 'large';
  /** Additional CSS class */
  className?: string;
  /** Click handler */
  onClick?: () => void;
}

const StarSVG = ({ size = 'default' }: { size?: 'small' | 'default' | 'large' }) => {
  const dimensions = {
    small: { width: 18, height: 18, viewBox: "0 0 18 18" },
    default: { width: 22, height: 21, viewBox: "0 0 22 21" },
    large: { width: 26, height: 25, viewBox: "0 0 26 25" }
  };
  
  const paths = {
    small: "M8.53834 0.609964C8.70914 0.199318 9.29086 0.199318 9.46166 0.609964L11.5278 5.57744C11.5998 5.75056 11.7626 5.86885 11.9495 5.88383L17.3123 6.31376C17.7556 6.3493 17.9354 6.90256 17.5976 7.19189L13.5117 10.6919C13.3693 10.8139 13.3071 11.0053 13.3506 11.1876L14.5989 16.4208C14.7021 16.8534 14.2315 17.1954 13.8519 16.9635L9.26063 14.1592C9.10062 14.0615 8.89938 14.0615 8.73937 14.1592L4.14806 16.9635C3.76851 17.1954 3.29788 16.8534 3.40108 16.4208L4.64939 11.1876C4.69289 11.0053 4.6307 10.8139 4.48831 10.6919L0.402413 7.19189C0.0646446 6.90256 0.244408 6.3493 0.687735 6.31376L6.05054 5.88383C6.23744 5.86885 6.40024 5.75056 6.47225 5.57744L8.53834 0.609964Z",
    default: "M10.5383 0.709939C10.7091 0.299293 11.2909 0.299294 11.4617 0.70994L14.0568 6.9493C14.1288 7.12242 14.2916 7.24071 14.4785 7.25569L21.2144 7.7957C21.6577 7.83125 21.8375 8.3845 21.4997 8.67383L16.3676 13.07C16.2252 13.192 16.1631 13.3834 16.2066 13.5657L17.7745 20.1388C17.8777 20.5715 17.4071 20.9134 17.0275 20.6816L11.2606 17.1592C11.1006 17.0614 10.8994 17.0614 10.7394 17.1592L4.97249 20.6816C4.59294 20.9134 4.12231 20.5715 4.22551 20.1388L5.79343 13.5657C5.83694 13.3834 5.77475 13.192 5.63236 13.07L0.5003 8.67383C0.162531 8.3845 0.342295 7.83125 0.785622 7.7957L7.52154 7.25569C7.70843 7.24071 7.87124 7.12242 7.94324 6.9493L10.5383 0.709939Z",
    large: "M12.5383 0.809977C12.7091 0.399331 13.2909 0.39933 13.4617 0.809977L16.5858 8.32122C16.6578 8.49434 16.8206 8.61263 17.0075 8.62761L25.1165 9.27771C25.5598 9.31325 25.7396 9.8665 25.4018 10.1558L19.2236 15.4481C19.0812 15.5701 19.019 15.7615 19.0625 15.9439L20.9501 23.8569C21.0533 24.2895 20.5826 24.6315 20.2031 24.3996L13.2606 20.1592C13.1006 20.0615 12.8994 20.0615 12.7394 20.1592L5.79692 24.3996C5.41737 24.6315 4.94674 24.2895 5.04994 23.8569L6.93748 15.9439C6.98099 15.7615 6.9188 15.5701 6.77641 15.4481L0.598187 10.1558C0.260419 9.8665 0.440181 9.31325 0.883508 9.27771L8.99253 8.62761C9.17943 8.61263 9.34223 8.49434 9.41424 8.32122L12.5383 0.809977Z"
  };
  
  const { width, height, viewBox } = dimensions[size];
  const path = paths[size];
  
  return (
    <svg 
      width={width} 
      height={height} 
      viewBox={viewBox} 
      fill="none" 
      xmlns="http://www.w3.org/2000/svg"
      className="star-svg"
    >
      <path d={path} className="star-outline" />
    </svg>
  );
};

const FillOverlay = ({ fill, size }: { fill: string; size: string }) => {
  if (fill === 'empty') return null;
  
  const fillPercentages: Record<string, number> = {
    '5%': 5,
    '15%': 15,
    '25%': 25,
    '40%': 40,
    '50%': 50,
    '60%': 60,
    '75%': 75,
    '85%': 85,
    '95%': 95,
    '100%': 100
  };
  
  const percentage = fillPercentages[fill] || 0;
  
  const dimensions = {
    small: { width: 18, height: 18, viewBox: "0 0 18 18" },
    default: { width: 22, height: 21, viewBox: "0 0 22 21" },
    large: { width: 26, height: 25, viewBox: "0 0 26 25" }
  };
  
  const paths = {
    small: "M9.53834 1.60996C9.70914 1.19932 10.2909 1.19932 10.4617 1.60996L12.5278 6.57744C12.5998 6.75056 12.7626 6.86885 12.9495 6.88383L18.3123 7.31376C18.7556 7.3493 18.9354 7.90256 18.5976 8.19189L14.5117 11.6919C14.3693 11.8139 14.3071 12.0053 14.3506 12.1876L15.5989 17.4208C15.7021 17.8534 15.2315 18.1954 14.8519 17.9635L10.2606 15.1592C10.1006 15.0615 9.89938 15.0615 9.73937 15.1592L5.14806 17.9635C4.76851 18.1954 4.29788 17.8534 4.40108 17.4208L5.64939 12.1876C5.69289 12.0053 5.6307 11.8139 5.48831 11.6919L1.40241 8.19189C1.06464 7.90256 1.24441 7.3493 1.68773 7.31376L7.05054 6.88383C7.23744 6.86885 7.40024 6.75056 7.47225 6.57744L9.53834 1.60996Z",
    default: "M11.5383 1.70994C11.7091 1.29929 12.2909 1.29929 12.4617 1.70994L15.0568 7.9493C15.1288 8.12242 15.2916 8.24071 15.4785 8.25569L22.2144 8.7957C22.6577 8.83125 22.8375 9.3845 22.4997 9.67383L17.3676 14.07C17.2252 14.192 17.1631 14.3834 17.2066 14.5657L18.7745 21.1388C18.8777 21.5715 18.4071 21.9134 18.0275 21.6816L12.2606 18.1592C12.1006 18.0614 11.8994 18.0614 11.7394 18.1592L5.97249 21.6816C5.59294 21.9134 5.12231 21.5715 5.22551 21.1388L6.79343 14.5657C6.83694 14.3834 6.77475 14.192 6.63236 14.07L1.5003 9.67383C1.16253 9.3845 1.34229 8.83125 1.78562 8.7957L8.52154 8.25569C8.70843 8.24071 8.87124 8.12242 8.94324 7.9493L11.5383 1.70994Z",
    large: "M13.5383 2.10996C13.7091 1.69932 14.2909 1.69932 14.4617 2.10996L17.5858 9.62121C17.6578 9.79433 17.8206 9.91261 18.0075 9.9276L26.1165 10.5777C26.5598 10.6132 26.7396 11.1665 26.4018 11.4558L20.2236 16.7481C20.0812 16.8701 20.019 17.0615 20.0625 17.2439L21.9501 25.1569C22.0533 25.5895 21.5826 25.9314 21.2031 25.6996L14.2606 21.4592C14.1006 21.3615 13.8994 21.3615 13.7394 21.4592L6.79692 25.6996C6.41737 25.9314 5.94674 25.5895 6.04994 25.1569L7.93748 17.2439C7.98099 17.0615 7.9188 16.8701 7.77641 16.7481L1.59819 11.4558C1.26042 11.1665 1.44018 10.6132 1.88351 10.5777L9.99253 9.9276C10.1794 9.91261 10.3422 9.79433 10.4142 9.62121L13.5383 2.10996Z"
  };
  
  const { width, height, viewBox } = dimensions[size];
  const path = paths[size];
  const fillWidth = Math.round((width * percentage) / 100);
  
  return (
    <div className="star-fill-overlay" style={{ width: `${fillWidth}px` }}>
      <svg 
        width={width} 
        height={height} 
        viewBox={viewBox} 
        fill="none" 
        xmlns="http://www.w3.org/2000/svg"
        className="star-fill-svg"
      >
        <defs>
          <clipPath id={`clip-${fill}-${size}`}>
            <rect width={fillWidth} height={height} fill="white"/>
          </clipPath>
        </defs>
        <g clipPath={`url(#clip-${fill}-${size})`}>
          <path d={path} className="star-fill" />
        </g>
      </svg>
    </div>
  );
};

export const Star = ({
  fill = 'empty',
  size = 'default',
  className = '',
  onClick
}: StarProps) => {
  const classes = [
    'star',
    `star--${size}`,
    `star--fill-${fill}`,
    className
  ].filter(Boolean).join(' ');

  return (
    <div className={classes} onClick={onClick}>
      <StarSVG size={size} />
      <FillOverlay fill={fill} size={size} />
    </div>
  );
};

export default Star;
